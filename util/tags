!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
BASE_TOOL_STRING_UTIL_H_	StringUtil.h	2;"	d
BZF_MD5_H	md5.h	34;"	d
F	md5.cpp	/^inline MD5::uint4 MD5::F(uint4 x, uint4 y, uint4 z) {$/;"	f	class:MD5
FF	md5.cpp	/^inline void MD5::FF(uint4 &a, uint4 b, uint4 c, uint4 d, uint4 x, uint4 s, uint4 ac) {$/;"	f	class:MD5
G	md5.cpp	/^inline MD5::uint4 MD5::G(uint4 x, uint4 y, uint4 z) {$/;"	f	class:MD5
GG	md5.cpp	/^inline void MD5::GG(uint4 &a, uint4 b, uint4 c, uint4 d, uint4 x, uint4 s, uint4 ac) {$/;"	f	class:MD5
H	md5.cpp	/^inline MD5::uint4 MD5::H(uint4 x, uint4 y, uint4 z) {$/;"	f	class:MD5
HH	md5.cpp	/^inline void MD5::HH(uint4 &a, uint4 b, uint4 c, uint4 d, uint4 x, uint4 s, uint4 ac) {$/;"	f	class:MD5
I	md5.cpp	/^inline MD5::uint4 MD5::I(uint4 x, uint4 y, uint4 z) {$/;"	f	class:MD5
II	md5.cpp	/^inline void MD5::II(uint4 &a, uint4 b, uint4 c, uint4 d, uint4 x, uint4 s, uint4 ac) {$/;"	f	class:MD5
MD5	md5.cpp	/^MD5::MD5()$/;"	f	class:MD5
MD5	md5.cpp	/^MD5::MD5(const std::string &text)$/;"	f	class:MD5
MD5	md5.h	/^class MD5$/;"	c
S11	md5.cpp	42;"	d	file:
S12	md5.cpp	43;"	d	file:
S13	md5.cpp	44;"	d	file:
S14	md5.cpp	45;"	d	file:
S21	md5.cpp	46;"	d	file:
S22	md5.cpp	47;"	d	file:
S23	md5.cpp	48;"	d	file:
S24	md5.cpp	49;"	d	file:
S31	md5.cpp	50;"	d	file:
S32	md5.cpp	51;"	d	file:
S33	md5.cpp	52;"	d	file:
S34	md5.cpp	53;"	d	file:
S41	md5.cpp	54;"	d	file:
S42	md5.cpp	55;"	d	file:
S43	md5.cpp	56;"	d	file:
S44	md5.cpp	57;"	d	file:
basetool	StringUtil.cpp	/^namespace basetool {$/;"	n	file:
basetool	StringUtil.h	/^namespace basetool {$/;"	n
blocksize	md5.h	/^  enum {blocksize = 64}; \/\/ VC6 won't eat a const static int here$/;"	e	enum:MD5::__anon1
buffer	md5.h	/^  uint1 buffer[blocksize]; \/\/ bytes that didn't fit in last 64 byte chunk$/;"	m	class:MD5
count	md5.h	/^  uint4 count[2];   \/\/ 64bit counter for number of bits (lo, hi)$/;"	m	class:MD5
debug	StringUtil_test.cpp	/^void debug(const string & oldstr, const string & newstr, const string & name) {$/;"	f
decode	md5.cpp	/^void MD5::decode(uint4 output[], const uint1 input[], size_type len)$/;"	f	class:MD5
digest	md5.h	/^  uint1 digest[16]; \/\/ the result$/;"	m	class:MD5
encode	md5.cpp	/^void MD5::encode(uint1 output[], const uint4 input[], size_type len)$/;"	f	class:MD5
finalize	md5.cpp	/^MD5& MD5::finalize()$/;"	f	class:MD5
finalized	md5.h	/^  bool finalized;$/;"	m	class:MD5
hexdigest	md5.cpp	/^std::string MD5::hexdigest() const$/;"	f	class:MD5
init	md5.cpp	/^void MD5::init()$/;"	f	class:MD5
main	StringUtil_test.cpp	/^int main()$/;"	f
main	md5_test.cpp	/^int main() {$/;"	f
md5	md5.cpp	/^std::string MD5::md5() const$/;"	f	class:MD5
operator <<	md5.cpp	/^std::ostream& operator<<(std::ostream& out, MD5 md5)$/;"	f
print	StringUtil_test.cpp	/^void print(vector<string> & ve){$/;"	f
rotate_left	md5.cpp	/^inline MD5::uint4 MD5::rotate_left(uint4 x, int n) {$/;"	f	class:MD5
size_type	md5.h	/^  typedef unsigned int size_type; \/\/ must be 32bit$/;"	t	class:MD5
state	md5.h	/^  uint4 state[4];   \/\/ digest so far$/;"	m	class:MD5
strJoin	StringUtil.cpp	/^    string strJoin(const vector<string> vl, const string & connect_str) {$/;"	f	namespace:basetool
strSplit	StringUtil.cpp	/^    void strSplit(const string & str, const string & div_str, vector<string> & value) {$/;"	f	namespace:basetool
strToLower	StringUtil.cpp	/^    void strToLower(string & str) {$/;"	f	namespace:basetool
strToUpper	StringUtil.cpp	/^    void strToUpper(string & str) {$/;"	f	namespace:basetool
strTrim	StringUtil.cpp	/^    void strTrim(string & str) {$/;"	f	namespace:basetool
strUnique	StringUtil.cpp	/^    void strUnique(vector<string> & vl) {$/;"	f	namespace:basetool
toString	StringUtil.cpp	/^    string toString( double value ){$/;"	f	namespace:basetool
toString	StringUtil.cpp	/^    string toString( float value ) {$/;"	f	namespace:basetool
toString	StringUtil.cpp	/^    string toString( int value ) {$/;"	f	namespace:basetool
toString	StringUtil.cpp	/^    string toString( long double value ) {$/;"	f	namespace:basetool
toString	StringUtil.cpp	/^    string toString( long long value ) {$/;"	f	namespace:basetool
toString	StringUtil.cpp	/^    string toString( long value ) {$/;"	f	namespace:basetool
toString	StringUtil.cpp	/^    string toString( unsigned long long value ) {$/;"	f	namespace:basetool
toString	StringUtil.cpp	/^    string toString( unsigned long value ) {$/;"	f	namespace:basetool
toString	StringUtil.cpp	/^    string toString( unsigned value ) {$/;"	f	namespace:basetool
transform	md5.cpp	/^void MD5::transform(const uint1 block[blocksize])$/;"	f	class:MD5
uint1	md5.h	/^  typedef unsigned char uint1; \/\/  8bit$/;"	t	class:MD5
uint4	md5.h	/^  typedef unsigned int uint4;  \/\/ 32bit$/;"	t	class:MD5
update	md5.cpp	/^void MD5::update(const char input[], size_type length)$/;"	f	class:MD5
update	md5.cpp	/^void MD5::update(const unsigned char input[], size_type length)$/;"	f	class:MD5
